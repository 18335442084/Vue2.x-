const path = require('path');

const VueLoaderPlugin = require('vue-loader/lib/plugin');
const webpack = require('webpack');
const HTMLPlugin = require('html-webpack-plugin');

const ExtractText = reuqire('extract-text-webpack-plugin');

const isDev = process.env.NODE_ENV === 'development';

console.log('isDev', isDev);

const config = {
    entry: path.join(__dirname, 'src/index.js'),
    output: {
        filename: 'bundle.js',
        path: path.join(__dirname, 'dist')
    },
    // mode: 'production',
    module: {
        rules: [
            {
                test: /\.vue$/,
                loader: 'vue-loader'
            },
            {
                test: /\.jsx$/,
                loader: 'babel-loader'
            },
            {
                test: /\.css$/,
                use: [
                    'style-loader',
                    'css-loader'
                ]
            },
            {
                test: /\.styl$/,
                use: [
                    'style-loader',
                    'css-loader',
                    {
                        loader: 'postcss-loader',
                        options: {
                            // 不另外生成sourceMap，直接使用stylus-loader生成的sourceMap
                            sourceMap: true
                        }
                    },
                    'stylus-loader' 
                ]
            },
            {
                test: /\.(gif|png|jpeg|svg)$/,
                loader: {
                    loader: 'url-loader',
                    options: {
                        limit: 1024,
                        name: '[name]-aaa.[ext]'
                    }
                }
            }
        ]
    },
    plugins: [
        // 判断开发、生产环境 cross-env 跨window、OS
        new webpack.DefinePlugin({
            'process.env': {
                NODE_ENV: isDev ? '"development"' : '"production"'
            }
        }),
        new VueLoaderPlugin(),
        // index.js生成html文件
        new HTMLPlugin()
    ]
}

if (isDev) {
    config.module.rules.push();
    config.devtool = '#cheap-module-eval-source-map',
    config.devServer = {
        port: 8000,
        // 不仅localhost，而且内网ip可访问
        host: 'localhost',
        overlay: {
            // errors 显示在页面上
            error: true, 
            // hot: true,
            // 地址映射
            historyFallback: {

            }
        }
    },
    config.plugins.push(
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoEmitOnErrorsPlugin()
    )
    // config.mode = 'development';
} 

console.log('config', config);


module.exports = config;